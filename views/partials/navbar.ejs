<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Voter ID Card</title>
    <link rel="stylesheet" href="https://cdn-uicons.flaticon.com/uicons-brands/css/uicons-brands.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <!-- Add this inside <head> -->
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        .navbar {
            width: 100%;
            background: rgba(255, 255, 255, 0.9);
            padding: 15px 60px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);
            z-index: 1000;
        }

        body {
            padding: 0;
            margin: 0;
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(to right, #4facfe, #00f2fe);
            display: flex;
            flex-direction: column;
            align-items: center;
            height: 100vh;
        }

        .navbar .logo {
            font-size: 22px;
            font-weight: bold;
            color: #007bff;
        }

        .nav-links {
            display: flex;
            align-items: center;
            gap: 20px;
            /* justify-content: center; */
        }

        .nav-links a {
            text-decoration: none;
            color: #333;
            font-size: 16px;
            font-weight: 500;
            padding: 8px 10px;
            border-radius: 5px;
            transition: 0.3s;
            /* display: flex;
            justify-content: center; */
        }

        .nav-links a:hover {
            /* background: #007bff; */
            color: #808080;
        }

        .nav-links a.active {
            position: relative;
            color: #007bff;
            font-weight: bold;
        }

        .nav-links a.active::after {
            content: "";
            position: absolute;
            left: 12px;
            /* bottom: -3px; trying to correct underline update */ 
            bottom: 6px;
            width: 60%;
            height: 2px;
            right: 13px;
            background-color: #007bff;
        }


        /* Dropdown Menu */
        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-btn a {
            text-decoration: none;
            /* color: black; */
            /* font-weight: bold; */
            padding: 10px;
            display: block;
            cursor: pointer;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            top: 59px;
            background: white;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
            min-width: 180px;
            z-index: 100;
            left: -40px;
        }

        .dropdown-content a {
            display: block;
            padding: 10px;
            text-decoration: none;
            color: black;
            border-bottom: 1px solid #ddd;
        }

        .dropdown-content a:hover {
            background: #f4f4f4;
            color: black
        }


        /* Notification Icon & Box */
        .notification-container {
            position: relative;
            cursor: pointer;
            margin: 0 5px 0;
        }

        .notification {
            font-size: 20px;
            position: relative;
        }

        .notification::after {
            content: "3";
            position: absolute;
            top: -5px;
            right: -10px;
            background: red;
            color: white;
            font-size: 12px;
            font-weight: bold;
            padding: 3px 7px;
            border-radius: 50%;
        }

        .notification-box {
            display: none;
            position: absolute;
            top: 50px;
            right: -60PX;
            width: 300px;
            max-height: 400px;
            background: white;
            border: 1px solid #ccc;
            box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
            padding: 10px;
            z-index: 1000;
            overflow-y: auto;
        }
        .notification-badge {
            position: absolute;
            top: 5px; /* Adjust if needed */
            right: -2px; /* Moves the badge 2px to the right */
            background-color: red;
            color: white;
            font-size: 8px;
            padding: 2px 6px;
            border-radius: 50%;
            display: none; /* Initially hidden */
        }


        .notification-box h4 {
            margin: 0;
            padding-bottom: 5px;
            border-bottom: 1px solid #ddd;
        }

        .notification-box ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .notification-box li {
            padding: 8px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }

        .notification-box li:hover {
            background-color: #f7f7f7;
        }

        /* Profile Picture */
        .profile-pic {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
            cursor: pointer;
            border: 2px solid #007bff;
        }

        .profile-img {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            border: 3px solid #007bff;
            object-fit: cover;
            margin-bottom: 15px;
        }

        /* Info Box */
        .info {
            font-size: 16px;
            color: #222;
            margin: 5px 0;
            width: 100%;
            padding: 8px 15px;
            background: rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            font-weight: bold;
        }

        .label {
            color: #555;
        }

        /* QR Code */
        .qr-code {
            width: 80px;
            height: 80px;
            margin-top: 10px;
            background: white;
            padding: 5px;
            border-radius: 8px;
        }

        /* Buttons */
        .button {
            margin-top: 15px;
            padding: 12px 20px;
            font-size: 16px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            background: #007bff;
            color: white;
            font-weight: bold;
            box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
            transition: 0.3s ease-in-out;
        }

        .button:hover {
            background: #0056b3;
        }

        /* Alignment */
        .alignmentClass {
            display: flex;
            justify-content: center;
            gap: 15px;
        }

        .profile-container {
            position: relative;
            display: inline-block;
        }

        .profile-menu {
            display: none;
            position: absolute;
            top: 62px;
            right: 0;
            background: white;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
            width: 180px;
            z-index: 100;
        }

        .profile-menu ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .profile-menu ul li {
            padding: 10px;
            border-bottom: 1px solid #ddd;
            text-align: left;
        }

        .profile-menu ul li a {
            text-decoration: none;
            color: black;
            display: block;
            font-size: 14px;
        }

        .profile-menu ul li:hover {
            background: #f4f4f4;
            cursor: pointer;
        }
        .custom-toast {
            border-radius: 8px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.15);
            font-size: 16px;
            padding: 12px 20px;
            font-weight: bold;
            color: white;
        }

    </style>
</head>
<body>

    <!-- Navbar -->
    <div class="navbar">
        <div class="logo">Voting System</div>
        <div class="nav-links">
            <a href="/voter/home">Home</a>
            
            <!-- Dropdown Menu -->
            <div class="dropdown">
                <div class="dropdown-btn" id="drop" onclick="toggleDropdown()">
                    <a href="#">Election <i class="fa fa-angle-down" onclick="toggleDropdown()" style="font-size:15px"></i></a>
                </div>
                <div class="dropdown-content" id="dropdownContent">
                    <a href="/contest-election">üèÜ Contest Election</a>
                    <a href="/admin/view-analysis">üìä View Analysis</a>
                    <a href="/admin/view-result">üìú View Result</a>
                    <a href="/publish-result">üì¢ Publish Result</a>
                </div>
            </div>
            
            

            <a href="/about">About</a>
            <a href="/contact">Updates</a>

            <div class="notification-container">
                <div class="notification-bell" onclick="toggleNotifications()">
                    üîî <span id="notificationCount" class="notification-badge">0</span>
                </div>
                <div class="notification-box" id="notificationBox">
                    <h4>Notifications <i class="fa fa-bell" style="font-size:15px"></i></h4>
                    <ul id="notificationList">
                        <li>Loading...</li>
                    </ul>
                </div>
            </div>
    
            <!-- <img src="<%= user.image || '/images/default-profile.png' %>" alt="Profile" class="profile-pic"> -->
            <div class="profile-container">
                <img src="<%= user.image || '/images/default-profile.png' %>" alt="Profile" class="profile-pic" onclick="toggleProfileMenu()">
                
                <!-- Dropdown Menu -->
                <div class="profile-menu" id="profileMenu">
                    <ul>
                        <li><a href="/voter/profile">üë§ View Profile</a></li>
                        <li><a href="/verify">‚úîÔ∏è Verify Account</a></li>
                        <li><a href="/contest">üèÜ Contest Election</a></li>
                        <li><a href="/voter/create-party">üèõÔ∏è Form New Party</a></li>
                        <li><a href="/voter/apply-for-candidate">ü§ù Join Party</a></li>
                        <li><a href="/voter/logout">üö™ Log Out</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>


    <script>
        function toggleNotifications() {
            const box = document.getElementById('notificationBox');
            const isVisible = box.style.display === 'block';
    
            if (!isVisible) {
                box.style.display = 'block';
                fetchNotifications();
                document.addEventListener('click', closeOnClickOutside); // Add event listener
            } else {
                box.style.display = 'none';
                document.removeEventListener('click', closeOnClickOutside); // Remove event listener
            }
        }
    
        function closeOnClickOutside(event) {
            const box = document.getElementById('notificationBox');
            const bell = document.querySelector('.notification-bell');
    
            if (!box.contains(event.target) && !bell.contains(event.target)) {
                box.style.display = 'none';
                document.removeEventListener('click', closeOnClickOutside); // Cleanup event listener
            }
        }

        async function fetchNotifications() {
            try {
                const response = await fetch('/notifications');
                const notifications = await response.json();
                const notificationList = document.getElementById('notificationList');

                notificationList.innerHTML = ''; // Clear existing list

                if (notifications.length === 0) {
                    notificationList.innerHTML = '<li>No new notifications</li>';
                } else {
                    notifications.forEach(notification => {
                        const li = document.createElement('li');
                        li.style.display = "flex"; 
                        li.style.alignItems = "center"; 
                        li.style.padding = "10px";
                        li.style.borderBottom = "1px solid #ddd"; // Optional: Adds a separator

                        // Create profile image element
                        const img = document.createElement('img');
                        img.src = notification.from.image || 'default-avatar.png'; // Default image fallback
                        img.alt = "Profile";
                        img.style.width = "40px"; 
                        img.style.height = "40px";
                        img.style.borderRadius = "50%"; // Makes it rounded
                        img.style.marginRight = "10px";

                        // Create text container
                        const textDiv = document.createElement('div');
                        textDiv.innerHTML = `<strong>${notification.from.name}:</strong> ${notification.message}`;

                        // Append elements
                        li.appendChild(img);
                        li.appendChild(textDiv);
                        notificationList.appendChild(li);
                    });
                }
            } catch (error) {
                console.error("Error fetching notifications:", error);
                notificationList.innerHTML = '<li>Error loading notifications</li>';
            }
        }


        // Fetch notifications immediately when the page loads
        fetchNotifications();

        // Set interval to fetch notifications every 5 minutes (300,000 ms)
        setInterval(fetchNotifications, 300000);


        // Automatically refresh notifications every 5 seconds
        // setInterval(fetchNotifications, 300000);

        function toggleProfileMenu() {
            const menu = document.getElementById("profileMenu");
            menu.style.display = menu.style.display === "block" ? "none" : "block";
        }

        // Close menu when clicking outside
        document.addEventListener("click", function (event) {
            const menu = document.getElementById("profileMenu");
            const profilePic = document.querySelector(".profile-pic");

            if (menu && !menu.contains(event.target) && event.target !== profilePic) {
                menu.style.display = "none";
            }
        });

        function toggleDropdown() {
            const dropdown = document.getElementById("dropdownContent");
            dropdown.style.display = dropdown.style.display === "block" ? "none" : "block";
        }

        // Close dropdown when clicking outside
        document.addEventListener("click", function (event) {
            const dropdown = document.getElementById("dropdownContent");
            const dropBtn = document.getElementById("drop");

            if (dropdown && !dropdown.contains(event.target) && !dropBtn.contains(event.target)) {
                dropdown.style.display = "none";
            }
        });


        document.addEventListener("DOMContentLoaded", function () {
            const currentPath = window.location.pathname; // Get current page path
            const navLinks = document.querySelectorAll(".nav-links a");
            const dropdownLinks = document.querySelectorAll(".dropdown-content a");
            const electionDropdown = document.querySelector(".dropdown-btn a");
            // let isElectionActive = false;

            navLinks.forEach(link => {
                if (link.getAttribute("href") === currentPath) {
                    link.classList.add("active"); // Add 'active' class to matching link
                }
            });
            dropdownLinks.forEach(link => {
                if (link.getAttribute("href") === currentPath) {
                    electionDropdown.classList.add("active"); // Add 'active' class to .dropdown-btn
                }
            });
        });

    </script>
    
    <script>
        // Function to get query parameter values
        function getQueryParam(param) {
            let searchParams = new URLSearchParams(window.location.search);
            return searchParams.get(param);
        }
    
        // Retrieve message and type from URL
        let message = getQueryParam("message");
        let type = getQueryParam("type");
    
        // If there's a message, show a toast
        if (message) {
            let bgColor = type === "success" 
                ? "linear-gradient(to right, #28a745, #20c997)"  // Green gradient for success
                : type === "error"
                    ? "linear-gradient(to right, #dc3545, #ff6b6b)" // Red gradient for errors
                    : "linear-gradient(to right, #ffc107, #ffdd57)";  // Yellow gradient for warning
                    
            Toastify({
                text: message,
                duration: 3000,
                close: true,
                gravity: "top", 
                position: "right",
                backgroundColor: bgColor, // Green gradient
                className: "custom-toast",
                stopOnFocus: true, 
                offset: {
                    y: 65 // Moves it 50px lower
                }
            }).showToast();
        }
    
        // Remove query params from URL after displaying the toast
        if (window.history.replaceState) {
            const url = new URL(window.location);
            url.searchParams.delete("message");
            url.searchParams.delete("type");
            window.history.replaceState({}, document.title, url);
        }
    </script>

</body>

</html>
